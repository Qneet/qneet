<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <CLSCompliant>false</CLSCompliant>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <!-- We don't want to reference the source generator dll directly in consuming projects -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsRoslynComponent>true</IsRoslynComponent>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Qneet.Attributes\Qneet.Attributes.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Common" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\Qneet.Attributes.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\Qneet.Attributes.dll" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />
    <None Include="$(OutputPath)\Qneet.Attributes.xml" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />
  </ItemGroup>


</Project>
